//@version=6
indicator("Dashboard [ReBo]", overlay=true)
//===============================================================================
// Internal Functions
//===============================================================================
method get_position(string position) =>
    switch position
        'Bottom Center'   => position.bottom_center
        'Bottom Left'   => position.bottom_left
        'Bottom Right'  => position.bottom_right
        'Middle Center' => position.middle_center
        'Middle Left' => position.middle_left
        'Middle Right' => position.middle_right
        'Top Center' => position.top_center
        'Top Left' => position.top_left
        'Top Right' => position.top_right

method get_size(string size) =>
    switch size
        'Auto'   => size.auto
        'Tiny'   => size.tiny
        'Small'  => size.small
        'Normal' => size.normal
        'Large' => size.large
        'Huge' => size.huge

method get_rsi_source(string type) =>
    switch type
        "Open"   => open
        "High"   => high
        "Low"    => low
        "HL2"    => (high + low) / 2
        "HLC3"   => (high + low + close) / 3
        "OHLC4"  => (open + high + low + close) / 4
        "Volume" => volume
        => close  
method clamp(float val, float min_val, float max_val) =>
    val > max_val ? max_val : val < min_val ? min_val : val

string db_group         = 'Dashboard'
bool db_show            = input.bool(defval = true, title = 'Enable', group = db_group)
string db_loc           = input.string(defval = "Bottom Right", title = "Dashboard Location", options = ["Top Right", "Bottom Right", "Bottom Left", "Middle Left"],group = db_group, display = display.none)
string db_size          = input.string(defval = "Small", title = "Dashboard Size", options = ["Tiny","Small","Normal","Large"],group = db_group, display = display.none)
int db_fast_len         = input.int(defval = 12, title="MACD Fast Length", group = db_group, display = display.none)
int db_slow_len         = input.int(defval = 26, title="MACD Slow Length", group = db_group, display = display.none)
int db_macd_smoothing   = input.int(defval = 9, title="MACD Signal Smoothing", group = db_group, display = display.none)
int db_voli_len         = input.int(defval = 10, title="Volatility Lookback", group = db_group, display = display.none)
int db_atr_smoothing    = input.int(defval = 20, title="Volatility Smoothing", group = db_group, display = display.none)
string db_rsi_src_type  = input.string(defval = "Close", title = "RSI Source", options = ["Close", "Open", "High", "Low", "HL2", "HLC3", "OHLC4", "Volume"], group = db_group, display = display.none)
int db_rsi_length       = input.int(defval = 14, title="RSI Length", group = db_group, display = display.none)
int db_dmi_smoothing    = input.int(defval = 14, title="DMI Smoothing Period", group = db_group, display = display.none)
int db_di_length        = input.int(defval = 14, title="DMI DI Period", group = db_group, display = display.none)
int db_dvol_length      = input.int(defval = 50, title="Delta Volume Period", group = db_group, display = display.none)
int db_tf_length        = input.int(defval = 5, title="TF Lookback", group = db_group, display = display.none)
bool db_show_tf         = input.bool(defval = true, title = 'Timeframe Trends', group = db_group)

// Volatility
float db_raw_atr = 3 * ta.atr(db_voli_len)
float db_sma_atr = ta.sma(db_raw_atr, db_atr_smoothing)
float db_std_atr = 2 * ta.stdev(db_raw_atr, db_atr_smoothing)

float db_top_band = db_sma_atr + db_std_atr
float db_bot_band = db_sma_atr - db_std_atr

float db_atr_range = db_top_band - db_bot_band
float db_dev = db_atr_range != 0 ? (db_raw_atr - db_bot_band) / db_atr_range : 0.5

float db_volatility_index = 40 * db_dev + 30
db_volatility_index := clamp(db_volatility_index, 0, 100)

//RSI
float db_rsi_source = get_rsi_source(db_rsi_src_type) 
float db_rsi = ta.rsi(db_rsi_source, db_rsi_length)

// MACD
[db_macd_line, db_macd_signal, db_histogram] = ta.macd(close, db_fast_len, db_slow_len, db_macd_smoothing)

// DMI
[db_di_plus, db_di_minus, db_adx] = ta.dmi(db_di_length, db_dmi_smoothing)

// Delta Volume
float db_dvol = close > open ? volume : close < open ? -volume : 0

float db_dvol_max = math.max(math.abs(ta.highest(db_dvol, db_dvol_length)), math.abs(ta.lowest(db_dvol, db_dvol_length)))
float db_dvol_normalized = db_dvol_max != 0 ? db_dvol / db_dvol_max : 0


get_tf_trend(tf) =>
    open_ = request.security(syminfo.tickerid, tf, open[db_tf_length - 1], lookahead=barmerge.lookahead_off)
    close_ = request.security(syminfo.tickerid, tf, close, lookahead=barmerge.lookahead_off)
    trend_up = close_ > open_
    trend_down = close_ < open_
    trend = trend_up ? 1 : trend_down ? -1 : 0
    symbol = trend == 1 ? "▲" : trend == -1 ? "▼" : "-"
    color_ = (trend == 1 ? color.green : (trend == -1 ? color.red : color.gray))
    [ symbol, color_]

[db_m1, db_m1_color]   = get_tf_trend("1")
[db_m3, db_m3_color]   = get_tf_trend("3")
[db_m5, db_m5_color]   = get_tf_trend("5")
[db_m15, db_m15_color] = get_tf_trend("15")
[db_m30, db_m30_color] = get_tf_trend("30")
[db_h1, db_h1_color]   = get_tf_trend("60")
[db_h2, db_h2_color]   = get_tf_trend("120")
[db_h4, db_h4_color]   = get_tf_trend("240")
[db_h12, db_h12_color] = get_tf_trend("720")
[db_d1, db_d1_color]   = get_tf_trend("D")


method plot_cell(table _table, int col, int row, string data, color text_color = #FFFFFF, string text_align = text.align_center, color bg_color = na) => 
    _table.cell(col,row,data,text_color = text_color, text_size = get_size(db_size), text_halign = text_align, bgcolor = bg_color)

if db_show
    if barstate.islast
        string db_table_size = get_size(db_size)
        table db_table = table.new(get_position(db_loc), 18, 20 , bgcolor = #11172565 , border_color = #373a4600 , border_width = 1 , frame_color = #000000 , frame_width = 1)
        
        float hist_diff = db_histogram - db_histogram[1]

        color volatility_color = db_volatility_index < 35 ? color.green : db_volatility_index < 50 ? color.yellow : db_volatility_index < 70 ? color.orange : color.red
        color rsi_color = db_rsi < 30 ? color.green : db_rsi > 70 ? color.red : db_rsi > 50 ? color.orange : color.yellow
        color histogram_color = db_histogram > 0 and hist_diff > 0 ? color.green : db_histogram > 0 and hist_diff < 0 ? color.orange : db_histogram < 0 and hist_diff < 0 ? color.red : db_histogram < 0 and hist_diff > 0 ? color.yellow : color.white
        color dvol_color = db_dvol_normalized > 0.5 ? color.green : db_dvol_normalized > 0.2 ? color.orange : db_dvol_normalized < -0.5 ? color.red : db_dvol_normalized < -0.2 ? color.orange : color.yellow
        color dmi_color = db_adx > 25 and db_di_plus > db_di_minus ? color.green : db_adx > 25 and db_di_minus > db_di_plus ? color.red : db_adx > 20 ? color.orange : color.yellow

        // Dashboard title
        db_table.plot_cell(0, 0, 'Dashboard', bg_color = #18233a)
        table.merge_cells(db_table, 0, 0, db_show_tf ? 5 : 1, 0)

        // // Technicals
        db_table.plot_cell(0, 1, 'Technicals', text_color = #b0b2b9)
        table.merge_cells(db_table, 0, 1, 1, 1)

        db_table.plot_cell(0, 2, 'Volatility Index', text_align = text.align_left)
        db_table.plot_cell(1, 2, str.tostring(db_volatility_index,"#.##"), text_color = volatility_color)

        db_table.plot_cell(0, 3, 'RSI', text_align = text.align_left)
        db_table.plot_cell(1, 3,  str.tostring(db_rsi,"#.##"), text_color = rsi_color)

        db_table.plot_cell(0, 4, 'MACD Histogram', text_align = text.align_left)
        db_table.plot_cell(1, 4,  str.tostring(db_histogram,"#.##"), text_color = histogram_color)

        db_table.plot_cell(0, 5, 'DMI', text_align = text.align_left)
        db_table.plot_cell(1, 5,  str.tostring(db_adx,"#.##"), text_color = dmi_color)

        db_table.plot_cell(0, 6, 'Delta Volume', text_align = text.align_left)
        db_table.plot_cell(1, 6,  str.tostring(db_dvol_normalized,"#.##"), text_color = dvol_color)

        // // Timeframe Trends
        if db_show_tf
            db_table.plot_cell(4, 1, 'Timeframe', text_color = #b0b2b9)
            db_table.plot_cell(5, 1, 'Trend', text_color = #b0b2b9)

            db_table.plot_cell(4, 2, "1 Minute")
            db_table.plot_cell(5, 2, db_m1, text_color = db_m1_color)

            db_table.plot_cell(4, 3, "3 Minute")
            db_table.plot_cell(5, 3, db_m3, text_color = db_m3_color)

            db_table.plot_cell(4, 4, "5 Minute")
            db_table.plot_cell(5, 4, db_m5, text_color = db_m5_color)

            db_table.plot_cell(4, 5, "15 Minute")
            db_table.plot_cell(5, 5, db_m15, text_color = db_m15_color)

            db_table.plot_cell(4, 6, "30 Minute")
            db_table.plot_cell(5, 6, db_m30, text_color = db_m30_color)

            db_table.plot_cell(4, 7, "1 Hour")
            db_table.plot_cell(5, 7, db_h1, text_color = db_h1_color)

            db_table.plot_cell(4, 8, "2 Hour")
            db_table.plot_cell(5, 8, db_h2, text_color = db_h2_color)

            db_table.plot_cell(4, 9, "4 Hour")
            db_table.plot_cell(5, 9, db_h4, text_color = db_h4_color)

            db_table.plot_cell(4, 10, "12 Hour")
            db_table.plot_cell(5, 10, db_h12, text_color = db_h12_color)

            db_table.plot_cell(4, 11, "Daily")
            db_table.plot_cell(5, 11, db_d1, text_color = db_d1_color)
